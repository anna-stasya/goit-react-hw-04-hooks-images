{"version":3,"sources":["Components/Modal/Modal.module.css","Components/LoadMoreButton/LoadMoreButton.module.css","Components/Searchbar/Searchbar.jsx","Components/Services/CardApi.jsx","Components/ImageGallery/CardErrorView.jsx","Components/LoadMoreButton/LoadMoreButton.jsx","Components/Modal/Modal.jsx","Components/ImageGalleryItem/ImageGalleryItem.jsx","Components/ImageGallery/ImageGallery.jsx","App.js","index.js","Components/Searchbar/Searchbar.module.css","Components/ImageGallery/ImageGallery.module.css"],"names":["module","exports","Searchbar","onNameSabmit","useState","searchbar","setSearchbar","className","s","onSubmit","event","preventDefault","trim","toast","error","SearchForm","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","api","fetchCard","name","page","fetch","then","response","ok","json","Promise","reject","Error","CardErrorView","massage","LoadMoreButton","LoadMoreBtn","Button","onClick","modalRoot","document","querySelector","Modal","onClose","largeImageURL","alt","createPortal","Overlay","src","ImageGalleryItem","webformatURL","tags","onOpenModal","ImageGalleryItemImage","Status","ImageGallery","imageName","cardImage","setCardImage","setError","status","setStatus","setPage","setAlt","setLargeImageURL","useEffect","cardAPI","cardImageNew","total","hits","catch","prevState","window","scrollTo","top","documentElement","scrollHeight","behavior","addEventListener","onEscClick","code","onCloseModal","removeEventListener","color","height","width","timeout","map","img","id","App","setImageName","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6e74951b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__yT40p\",\"Modal\":\"Modal_Modal__Xb592\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"LoadMoreButton_Button__3go3-\"};","import { useState } from 'react';\nimport { toast } from 'react-toastify';\n\nimport s from './Searchbar.module.css';\n\nfunction Searchbar({ onNameSabmit }) {\n  const [searchbar, setSearchbar] = useState('');\n\n  const handleNameChange = event => {\n    setSearchbar(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSabmit = event => {\n    event.preventDefault();\n\n    if (searchbar.trim() === '') {\n      toast.error('Error! Еnter something');\n      return;\n    }\n    onNameSabmit(searchbar);\n    setSearchbar('');\n  };\n\n  return (\n    <header className={s.Searchbar}>\n      <form onSubmit={handleSabmit} className={s.SearchForm}>\n        <button type=\"submit\" className={s.SearchFormButton}>\n          <span className={s.SearchFormButtonLabel}>Search</span>\n        </button>\n\n        <input\n          className={s.SearchFormInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={searchbar}\n          onChange={handleNameChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nexport { Searchbar };\n","const BASE_URL = 'https://pixabay.com/api/';\nconst KEY = '22363451-8577670099bbad87a35d9bf1c';\n\nfunction fetchCard(name, page) {\n  return fetch(\n    `${BASE_URL}?q=${name}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(new Error(`Not found ${name}`));\n  });\n}\n\nconst api = { fetchCard };\n\nexport default api;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction CardErrorView({ massage }) {\n  return (\n    <div>\n      <p>{massage}</p>\n    </div>\n  );\n}\n\nCardErrorView.propTypes = {\n  massage: PropTypes.string.isRequired,\n};\n\nexport { CardErrorView };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './LoadMoreButton.module.css';\n\nfunction LoadMoreButton({ LoadMoreBtn }) {\n  return (\n    <button type=\"button\" className={s.Button} onClick={LoadMoreBtn}>\n      Load more\n    </button>\n  );\n}\n\nLoadMoreButton.propTypes = {\n  LoadMoreBtn: PropTypes.func.isRequired,\n};\n\nexport { LoadMoreButton };\n","import React from 'react';\nimport { createPortal } from 'react-dom';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nfunction Modal({ onClose, largeImageURL, alt }) {\n  return createPortal(\n    <div className={s.Overlay} onClick={onClose}>\n      <div className={s.Modal}>\n        <img src={largeImageURL} alt={alt} />\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n\nexport { Modal };\n","import React from 'react';\nimport s from '../ImageGallery/ImageGallery.module.css';\n\nconst ImageGalleryItem = ({\n  webformatURL,\n  tags,\n  largeImageURL,\n  onOpenModal,\n}) => {\n  return (\n    <li\n      onClick={() => {\n        onOpenModal(largeImageURL, tags);\n      }}\n    >\n      <img src={webformatURL} alt={tags} className={s.ImageGalleryItemImage} />\n    </li>\n  );\n};\n\nexport default ImageGalleryItem;\n","import { useState, useEffect } from 'react';\nimport Loader from 'react-loader-spinner';\nimport cardAPI from '../Services/CardApi';\nimport { CardErrorView } from './CardErrorView';\nimport { LoadMoreButton } from '../LoadMoreButton/LoadMoreButton';\nimport { Modal } from '../Modal/Modal';\n\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\n\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport s from './ImageGallery.module.css';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nfunction ImageGallery({ imageName }) {\n  const [cardImage, setCardImage] = useState([]);\n  const [error, setError] = useState(null);\n  // const [status, setStatus] = useState('idle');\n  const [status, setStatus] = useState(Status.IDLE);\n  const [page, setPage] = useState(1);\n  const [alt, setAlt] = useState('');\n  const [largeImageURL, setLargeImageURL] = useState('');\n\n  useEffect(() => {\n    //==== если пустая строка ====\n    if (!imageName) {\n      return;\n    }\n\n    setStatus(Status.PENDING);\n\n    if (page === 1) {\n      cardAPI\n        .fetchCard(imageName, page)\n        .then(cardImageNew => {\n          if (cardImageNew.total === 0) {\n            setError(`Not found ${imageName}`);\n            setStatus(Status.REJECTED);\n          } else {\n            setCardImage(cardImageNew.hits);\n            setStatus(Status.RESOLVED);\n          }\n        })\n        .catch(error => {\n          setError(error);\n          setStatus(Status.REJECTED);\n        });\n    }\n\n    if (page !== 1) {\n      cardAPI\n        .fetchCard(imageName, page)\n        .then(cardImageNew => {\n          setCardImage(prevState => [...prevState, ...cardImageNew.hits]);\n          setStatus(Status.RESOLVED);\n        })\n        .then(() => {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n        })\n        .catch(error => {\n          setError(error);\n          setStatus(Status.REJECTED);\n        });\n    }\n  }, [imageName, page]);\n\n  //==== кнопка загрузить ещё ====\n  const loadMoreBtn = () => {\n    setPage(prevState => prevState + 1);\n  };\n\n  //====открыть модалку ===\n  const onOpenModal = (largeImageURL, alt) => {\n    setLargeImageURL(largeImageURL);\n    setAlt(alt);\n    window.addEventListener('keydown', onEscClick);\n  };\n\n  //-----------------закрыть по ESС---------------------\n  const onEscClick = event => {\n    const ESC_KEY_CODE = 'Escape';\n\n    if (event.code === ESC_KEY_CODE) {\n      onCloseModal();\n    }\n  };\n  //====закрыть модалку ===\n  const onCloseModal = () => {\n    setLargeImageURL('');\n    setAlt('');\n    window.removeEventListener('keydown', onEscClick);\n  };\n\n  //==== если пусто ====\n  if (status === Status.IDLE) {\n    return <div>While null, enter something</div>;\n  }\n\n  //==== что-то загружается (загрузка) ====\n  if (status === Status.PENDING) {\n    return (\n      <div>\n        <Loader\n          type=\"MutatingDots\"\n          //type=\"Watch\"\n          color=\"#00BFFF\"\n          height={80}\n          width={80}\n          timeout={3000}\n        />\n      </div>\n    );\n  }\n\n  //==== рендер всех картинок ====\n  if (status === Status.RESOLVED) {\n    return (\n      <ul className={s.ImageGallery}>\n        {/* ====рендер всех картинок==== */}\n        {cardImage.map(img => {\n          return (\n            <ImageGalleryItem\n              key={img.id}\n              alt={img.tags}\n              webformatURL={img.webformatURL}\n              largeImageURL={img.largeImageURL}\n              onOpenModal={onOpenModal}\n            />\n          );\n        })}\n\n        <LoadMoreButton LoadMoreBtn={loadMoreBtn} />\n        {/* ====модалка==== */}\n        {largeImageURL && (\n          <Modal\n            largeImageURL={largeImageURL}\n            alt={alt}\n            onClose={onCloseModal}\n          />\n        )}\n      </ul>\n    );\n  }\n\n  //==== отклонено (ошибка) ====\n  if (status === Status.REJECTED) {\n    return <CardErrorView massage={error} />;\n  }\n}\n\nexport { ImageGallery };\n","import { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n//Components\nimport { Searchbar } from './Components/Searchbar/Searchbar';\nimport { ImageGallery } from './Components/ImageGallery/ImageGallery';\n\nimport './App.css';\n// import s from './App.module.css';\n\nfunction App() {\n  const [imageName, setImageName] = useState('');\n\n  // //отправка формы\n  // const handleFormSubmit = imageName => {\n  //   setImageName(imageName);\n  // };\n\n  return (\n    <div>\n      <Searchbar onNameSabmit={setImageName} />\n\n      <ImageGallery imageName={imageName}></ImageGallery>\n\n      <ToastContainer autoClose={3000} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__kGJJY\",\"SearchForm\":\"Searchbar_SearchForm__2Z65v\",\"SearchFormButton\":\"Searchbar_SearchFormButton__1GGzP\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__1oloc\",\"SearchFormInput\":\"Searchbar_SearchFormInput__3AdLU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3BN6g\",\"ImageGalleryItem\":\"ImageGallery_ImageGalleryItem__ihk9E\",\"ImageGalleryItemImage\":\"ImageGallery_ImageGalleryItemImage__3q4tn\"};"],"sourceRoot":""}